[tool.poetry]
name = "electricvehicle_charging_control"
version = "0.1.0"
description = "Jinjian Chaoxing is a scheduled task service system based on Python 3.x. It securely obtains vehicle information through the Jinjian Zhixing applet and stores the data in an SQLite database. The project uses APScheduler for task scheduling, and FastAPI provides secure interface services."
readme = "README.md"
authors = ["wsz <admin@daka.today>"]
license = "MIT"
classifiers = [
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.11",
]

[tool.poetry.dependencies]
python = "^3.11"
click = "^8.1.7"
dynaconf = "^3.2.6"

[tool.poetry.group.dev.dependencies]
pylint = "^2.17.4"
isort = "^5.12.0"
pytest = "^7.3.1"
tox = "^4.5.2"
mkdocs = "^1.4.3"
mkdocs-material = "^8.5.11"
pytest-pylint = "^0.19.0"
pre-commit = "^3.3.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
[tool.pytest.ini_options]
testpaths = "tests"
python_files = "tests.py test_*.py *_tests.py"

[tool.pylint.design]
max-line-length = 120

[tool.poetry.scripts]
electricvehicle_charging_control = "electricvehicle_charging_control.cmdline:main"
